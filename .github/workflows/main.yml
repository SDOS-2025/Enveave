name: Test API

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      # --- DATABASE ---
      # IMPORTANT: Use your TEST database URL for testing!
      TEST_MONGODB_URL: ${{ secrets.TEST_MONGODB_URL }} # Map test DB secret to the var your app expects

      # --- AUTH/SECURITY ---
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      # Non-sensitive config values can be set directly or via secrets if preferred
      PORT: 3000 # Often good to use a different port for tests if needed
      LOCKOUT_DURATION: 5
      MAX_LOGIN_ATTEMPTS: 10
      jwtExpiration: 3600
      MAX_OTP_ATTEMPTS: 5
      OTP_LOCKOUT_DURATION: 600000

      # --- EMAIL (using secrets as before) ---
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 465
      EMAIL_USER: enveavecontact@gmail.com
      EMAIL_PASS: "akbv lmhn wovb qanp"
      EMAIL_FROM: "Enveave OTP CI" # Optional: Differentiate sender for test emails
      EMAIL_SECURE: true # Assuming true based on your .env

      # --- CLOUDINARY (if tests interact with it) ---
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

      # --- GEMINI (if tests interact with it) ---
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}



    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd api
          npm ci

      - name: Run tests
        run: |
          cd api
          npm test
